quarkus.log.level=${LOGLEVEL\:INFO}
quarkus.log.console.color=true
%dev.quarkus.log.category."io.smallrye".level=FINE
%dev.quarkus.log.category."io.netty".level=FINE
%dev.quarkus.log.category."javax.net.ssl".level=FINE


%prod.quarkus.http.port=${HTTPPORT\:8080}
%staging.quarkus.http.port=8080
%dev.quarkus.http.port=8080

# Rest client configuration properties
# using "configKey" instead of interface fully qualified name
#sensor - id
sensor-api/mp-rest/url=${SENSORSURL\:http\://localhost\:5000/} 
sensor-api/mp-rest/scope=javax.inject.Singleton

registration-api/mp-rest/url=${REGISTRATION-SERVICE-URL\:http\://localhost:10001} 
registration-api/mp-rest/scope=javax.inject.Singleton

nominatim-api/mp-rest/url=https://nominatim.openstreetmap.org
nominatim-api/mp-rest/scope=javax.inject.Singleton

# App related properties
%dev.app.station.serial=stationserial01
%dev.app.station.name=teststation01
%dev.app.station.address=viale john fitzgerald kennedy 2/D vibo valentia
app.station.serial=${STATIONSERIAL}
app.station.name=${STATIONNAME}
app.station.address=${STATIONADDRESS}

app.pks.password=717bd9f7-a84a-4a35-bddf-10064c533010

%dev.app.datafile.path=/var/data/qiot/stationdata.json
%staging.app.datafile.path=/var/data/qiot/stationdata.json
%prod.app.datafile.path=/var/data/qiot/stationdata.json
%dev.app.certificate.path=/var/data/qiot/client.ts
%staging.app.certificate.path=/var/data/qiot/client.ts
%prod.app.certificate.path=/var/data/qiot/client.ts

# Configure the MQTT source (we write to it)
### gas
mp.messaging.outgoing.gas.type=smallrye-mqtt
mp.messaging.outgoing.gas.qos=2
mp.messaging.outgoing.gas.auto-generated-client-id=true

#%dev
%dev.mp.messaging.outgoing.gas.host=${MQTTURL\:localhost}
%dev.mp.messaging.outgoing.gas.port=${MQTTPORT\:1883}
%dev.mp.messaging.outgoing.gas.username=quarkus
%dev.mp.messaging.outgoing.gas.password=quarkus
%dev.mp.messaging.outgoing.gas.ssl=false

#%staging
%staging.mp.messaging.outgoing.gas.host=${MQTTURL\:activemq}
%staging.mp.messaging.outgoing.gas.port=${MQTTPORT\:1883}
%staging.mp.messaging.outgoing.gas.username=quarkus
%staging.mp.messaging.outgoing.gas.password=quarkus
mp.messaging.outgoing.gas.ssl=false


#%prod
%prod.mp.messaging.outgoing.gas.host=${MQTTURL}
%prod.mp.messaging.outgoing.gas.port=${MQTTPORT\:443}
%prod.mp.messaging.outgoing.gas.ssl=true
%prod.mp.messaging.outgoing.gas.trust-all=true
%prod.mp.messaging.outgoing.gas.ssl.truststore.location=/var/data/qiot/client.ts
%prod.mp.messaging.outgoing.gas.ssl.truststore.password=${app.pks.password}


### pollution
mp.messaging.outgoing.pollution.type=smallrye-mqtt
mp.messaging.outgoing.pollution.qos=2
mp.messaging.outgoing.pollution.auto-generated-client-id=true

#%dev
%dev.mp.messaging.outgoing.pollution.host=${MQTTURL\:localhost}
%dev.mp.messaging.outgoing.pollution.port=${MQTTPORT\:1883}
%dev.mp.messaging.outgoing.pollution.username=quarkus
%dev.mp.messaging.outgoing.pollution.password=quarkus
%dev.mp.messaging.outgoing.pollution.ssl=false

#%staging
%staging.mp.messaging.outgoing.pollution.host=${MQTTURL\:activemq}
%staging.mp.messaging.outgoing.pollution.port=${MQTTPORT\:1883}
%staging.mp.messaging.outgoing.pollution.username=quarkus
%staging.mp.messaging.outgoing.pollution.password=quarkus
mp.messaging.outgoing.pollution.ssl=false


#%prod
%prod.mp.messaging.outgoing.pollution.host=${MQTTURL}
%prod.mp.messaging.outgoing.pollution.port=${MQTTPORT\:443}
%prod.mp.messaging.outgoing.pollution.ssl=true
%prod.mp.messaging.outgoing.pollution.trust-all=true
%prod.mp.messaging.outgoing.pollution.ssl.truststore.location=/var/data/qiot/client.ts
%prod.mp.messaging.outgoing.pollution.ssl.truststore.password=${app.pks.password}