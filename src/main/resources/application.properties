quarkus.log.level=${LOGLEVEL\:INFO}
%dev.quarkus.log.console.color=true
%dev.quarkus.log.category."io.smallrye".level=FINE
%dev.quarkus.log.category."io.netty".level=FINE
%dev.quarkus.log.category."javax.net.ssl".level=FINE

########## APP data ##########

#App data
qiot.folder.root=/var/data/qiot
qiot.folder.data=${qiot.folder.root}/data

qiot.datafile.path=${qiot.folder.data}/stationdata.json

#Truststore
qiot.mqtts.ts.path=${qiot.folder.data}/mqtts/client.ts
qiot.mqtts.ts.password=${TRUSTSTOREPASSWORD\:123456}

#Keystore
qiot.mqtts.ks.path=${qiot.folder.data}/mqtts/client.ks
qiot.mqtts.ks.password=${KEYSTOREPASSWORD\:123456}


%dev.qiot.station.serial=stationserial01
%dev.qiot.station.name=teststation01
%dev.qiot.station.address=viale john fitzgerald kennedy 2/D vibo valentia
qiot.station.serial=${STATIONSERIAL\:empty}
qiot.station.name=${STATIONNAME}
qiot.station.address=${STATIONADDRESS}

########## APP data ##########


%prod.quarkus.http.port=${HTTPPORT\:8080}
%staging.quarkus.http.port=8080
%dev.quarkus.http.port=8080

# Rest client configuration properties
# using "configKey" instead of interface fully qualified name
#sensor - id
sensor-api/mp-rest/url=${SENSORSURL\:http\://localhost\:5000/} 
sensor-api/mp-rest/scope=javax.inject.Singleton

#quarkus.native.resources.includes=META-INF/resources/certs/client.ts,META-INF/resources/certs/client.ks

#%dev.registration-api/mp-rest/url=http://registration-service-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com/
registration-api/mp-rest/url=${REGISTRATION-SERVICE-URL\:https\://localhost:8443}
registration-api/mp-rest/keyStore=${qiot.folder.root}/https/client.ks
registration-api/mp-rest/keyStorePassword=123456
registration-api/mp-rest/trustStore=${qiot.folder.root}/https/client.ts
registration-api/mp-rest/trustStorePassword=123456
registration-api/mp-rest/scope=javax.inject.Singleton

%dev.quarkus.tls.trust-all=true
quarkus.ssl.native=true


nominatim-api/mp-rest/url=https://nominatim.openstreetmap.org
nominatim-api/mp-rest/scope=javax.inject.Singleton


# Configure the MQTT source (we write to it)
### gas
mp.messaging.outgoing.gas.type=smallrye-mqtt
mp.messaging.outgoing.gas.qos=2
mp.messaging.outgoing.gas.auto-generated-client-id=true

#%dev
%dev.mp.messaging.outgoing.gas.host=${MQTTURL\:localhost}
%dev.mp.messaging.outgoing.gas.port=${MQTTPORT\:1883}
#%dev.mp.messaging.outgoing.gas.host=endpoint-service-mqtts-0-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com
#%dev.mp.messaging.outgoing.gas.port=443
%dev.mp.messaging.outgoing.gas.username=quarkus
%dev.mp.messaging.outgoing.gas.password=quarkus
%dev.mp.messaging.outgoing.gas.ssl=false

#%staging
%staging.mp.messaging.outgoing.gas.host=${MQTTURL\:activemq}
%staging.mp.messaging.outgoing.gas.port=${MQTTPORT\:1883}
%staging.mp.messaging.outgoing.gas.username=quarkus
%staging.mp.messaging.outgoing.gas.password=quarkus
mp.messaging.outgoing.gas.ssl=false


#%prod
%prod.mp.messaging.outgoing.gas.host=${MQTTURL}
%prod.mp.messaging.outgoing.gas.port=${MQTTPORT\:443}
%prod.mp.messaging.outgoing.gas.ssl=true
%prod.mp.messaging.outgoing.gas.trust-all=true
%prod.mp.messaging.outgoing.gas.ssl.truststore.location=${qiot.mqtts.ts.path}
%prod.mp.messaging.outgoing.gas.ssl.truststore.password=${qiot.mqtts.ts.password}
%prod.mp.messaging.outgoing.gas.ssl.keystore.location=${qiot.mqtts.ks.path}
%prod.mp.messaging.outgoing.gas.ssl.keystore.password=${qiot.mqtts.ks.password}


### pollution
mp.messaging.outgoing.pollution.type=smallrye-mqtt
mp.messaging.outgoing.pollution.qos=2
mp.messaging.outgoing.pollution.auto-generated-client-id=true

#%dev
%dev.mp.messaging.outgoing.pollution.host=${MQTTURL\:localhost}
%dev.mp.messaging.outgoing.pollution.port=${MQTTPORT\:1883}
#%dev.mp.messaging.outgoing.pollution.host=endpoint-service-mqtts-0-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com
#%dev.mp.messaging.outgoing.pollution.port=443
%dev.mp.messaging.outgoing.pollution.username=quarkus
%dev.mp.messaging.outgoing.pollution.password=quarkus
%dev.mp.messaging.outgoing.pollution.ssl=false

#%staging
%staging.mp.messaging.outgoing.pollution.host=${MQTTURL\:activemq}
%staging.mp.messaging.outgoing.pollution.port=${MQTTPORT\:1883}
%staging.mp.messaging.outgoing.pollution.username=quarkus
%staging.mp.messaging.outgoing.pollution.password=quarkus
mp.messaging.outgoing.pollution.ssl=false


#%prod
%prod.mp.messaging.outgoing.pollution.host=${MQTTURL}
%prod.mp.messaging.outgoing.pollution.port=${MQTTPORT\:443}
%prod.mp.messaging.outgoing.pollution.ssl=true
%prod.mp.messaging.outgoing.pollution.trust-all=true
%prod.mp.messaging.outgoing.pollution.ssl.truststore.location=${qiot.mqtts.ts.path}
%prod.mp.messaging.outgoing.pollution.ssl.truststore.password=${qiot.mqtts.ts.password}
%prod.mp.messaging.outgoing.pollution.ssl.keystore.location=${qiot.mqtts.ks.path}
%prod.mp.messaging.outgoing.pollution.ssl.keystore.password=${qiot.mqtts.ks.password}